<?xml version="1.0" encoding="utf-8"?>
<chapter id="corner.quickstar">
	<title>快速开始</title>
	<abstract>
		<para>
			本章描述:快速使用corner.
			<note>
				<para>
					概述
				</para>
			</note>
		</para>
	</abstract>
	<sect1 id="corner.quickstar.sect1">
		<title>构建corner的开发环境</title>
		<para>
			
		</para>
		<para>
			下载corner:
		</para>
		
	</sect1>
	<procedure id="corner.quickstar.proc1"><title>构建corner的开发环境</title>
		<step>
		  <para>安装eclipse plugin:取得168.168.168.205上的addons-3.2 eclipse plugin ,</para>
		</step>
		<step>
		  <para>下载corner:打开svn资源库视图,新建一个资源库位置,填入corner的url地址:http://dev.bjmaxinfo.com/svn/corner,在turck目录下
				 检索出corner工程.</para>
		</step>
		<step>
		  <para>下载jetty，并解压缩。</para>
		</step>
		<step>
			<para>运行corner</para>
			<substeps>
				<step>
					<para>点击eclipse run，在jetty web 上new 一个工程运行环境，配置如图：</para>
					<figure><title>jetty配置</title>
						<graphic fileref="../shared/images/corner-jetty-config.gif"></graphic>
					</figure>
				</step>
				<step>
					<para>这个demo演示了开发中,单表,一对多,多对多的增,删,改,查,的操作.</para>
				</step>
			</substeps>
		</step>
	</procedure>
	<sect1 id="corner.quickstar.sect2">
		<title>了解corner</title>
		<para>
			corner在 hibernate,spring,tapestry 的基础上构建.
		</para>
		<para>
			实现了对基本数据的封装,和对tapestry的扩展.使程序员减少编码,更多的关注业务.
			eg: xxxForm.page对应的类为　class="corner.orm.tapestry.page.PoFormPage"
			　　xxxList.page对应的类为　class="corner.orm.tapestry.page.PoListPage"
		</para>
		<para>
			实现了页面之间数据传递的对象化,只需关注对象,而不必关系对象的细节．
			例如:在corner中,修改页面中一个实体的属性时，不需要传递这个对象的id，而只需传递一个entity 即可
			　eg: ＜a parameters="ognl:entity" listener="listener:doEditEntityAction" jwcid="@DirectLink" href="AForm.html" id="editAction"＞
		</para>
		<para>
			在corner中，严格限定 html,page文件的命名规则．　用于显示数据的页面需为　xxxList.html 对应page为　xxxList.page
			用于修改，添加数据的页面为　xxxForm.html　对应page为　xxxForm.page
		</para>
	</sect1>
	<sect1 id="corner.quickstar.sect3">
		<title>step by step</title>
		<para>参考corner下的 src/main/webapp/one</para>
		<para>AList 功能，　显示数据，查询数据，删除数据，导向编辑的链接．</para>
		<para>使用tableview 显示数据
			eg:＜div jwcid="@contrib:TableView" columns="shortName" element="div" source="ognl:source" persist="client"＞
		</para>
		<para>查询数据
		　eg:＜form jwcid="AQueryForm"＞
			对应组件
			＜component type="Form" id="AQueryForm"＞
    			＜binding value="listener:doQueryEntityAction" name="listener"/＞
				＜binding value="ognl:beans.delegate" name="delegate"/＞
			＜/component＞
		</para>
		<para>
			删除数据
			eg: ＜a parameters="ognl:entity" listener="listener:doDeleteEntityAction" jwcid="@DirectLink" href="#" id="deleteAction"＞
              ＜span key="link.delete"＞Delete＜/span＞
            ＜/a＞
		</para>
		<para>
			导向编辑的链接
			eg: ＜a parameters="ognl:entity" listener="listener:doEditEntityAction" jwcid="@DirectLink" href="AForm.html" id="editAction"＞
              ＜span key="link.edit"＞Edit＜/span＞
            ＜/a＞
		</para>
		<para>AForm　功能：编辑或添加数据．</para>
		 <para>eg:＜form jwcid="AForm" action="AList.html"＞
				＜input jwcid="@Submit" type="Submit" value="message:button.Okay"/＞
			＜/form＞
		　</para>
	      <para>
		　对应组件　＜component type="Form" id="AForm"＞
					＜binding value="ognl:beans.delegate" name="delegate"/＞
					＜binding value="ognl:true" name="clientValidationEnabled"/＞
    				＜binding value="listener:doSaveEntityAction" name="success"/＞
					＜binding value="listener:doCancelEntityAction" name="cancel"/＞
				  ＜/component＞
		</para>
	</sect1>
</chapter>

